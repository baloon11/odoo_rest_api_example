upstream odoo {

    server localhost:8069 weight=1 fail_timeout=3000s;

}

upstream polling {
    server localhost:8072 weight=1 fail_timeout=3000s;
}


server {

    listen 80;
    listen [::]:80 ipv6only=on;
    server_name http://localhost;

    # Specifies the maximum accepted body size of a client request,
    # as indicated by the request header Content-Length.
    client_max_body_size        200m;

    # add ssl specific settings
    keepalive_timeout           60;

    # increase proxy buffer to handle some OpenERP web requests
    proxy_buffers               16 64k;
    proxy_buffer_size           128k;


    location / {
        proxy_pass              http://odoo;

        # Force timeouts if the backend dies
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

        # Set headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;



        # Set timeouts
        proxy_connect_timeout   3600;
        proxy_send_timeout      3600;
        proxy_read_timeout      3600;
        send_timeout            3600;

        # By default, do not forward anything
        proxy_redirect          off;
    }

    location /longpolling/ {
        proxy_pass              http://polling;
        # Force timeouts if the backend dies
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

        # Set headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;

        # Set timeouts
        proxy_connect_timeout   3600;
        proxy_send_timeout      3600;
        proxy_read_timeout      3600;
        send_timeout            3600;

        # By default, do not forward anything
        proxy_redirect          off;
    }

    # Cache some static data in memory for 60mins.
    # under heavy load this should relieve stress on the Odoo web interface a bit.
    location ~* /[0-9a-zA-Z_]*/static/ {
        proxy_cache_valid       200 60m;
        proxy_buffering         on;
        expires                 864000;
        proxy_pass              http://odoo;
    }

		location ^~ /api/ {
			proxy_pass              http://odoo;

#			if ($request_method = 'OPTIONS') {
#					  add_header 'Access-Control-Allow-Origin' '*';
#					  add_header 'Access-Control-Allow-Credentials' 'true';
#					  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
#					  add_header 'Access-Control-Allow-Headers' 'PROFILE-ID,Access-Control-Allow-Origin,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,access-control-allow-headers,access-control-allow-origin,access-token';
#					  add_header 'Access-Control-Max-Age' 1728000;
#					  add_header 'Content-Type' 'text/plain charset=UTF-8';
#					  add_header 'Content-Length' 0;
#					  return 200;
#				      }

		            if ($request_method = 'POST') {
		                add_header 'Access-Control-Allow-Origin' '*' always;
		            }

		            if ($request_method = 'GET') {
		                add_header 'Access-Control-Allow-Origin' '*' always;
		            }

		            if ($request_method = 'PUT') {
		                add_header 'Access-Control-Allow-Origin' '*' always;
		            }


#		            if ($request_method = 'DELETE') {
#		                add_header 'Access-Control-Allow-Origin' '*' always;
#		            }



		}



    access_log /var/log/nginx/odoo.access.log;
    error_log  /var/log/nginx/odoo.error.log;
}
